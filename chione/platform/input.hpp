#pragma once

#include "base.hpp"

#include "maths/vector.hpp"
#include "pch.hpp"

namespace ce {
    /// @addtogroup platform
    /// @{

    /// @ingroup input_events
    /// @{

    /// Buttons on a mouse or trackpad. Currently mapped to SDL2 values because that is what is used in the
    /// implementation. Only supports up to 5 mouse buttons.
    enum class MouseButton : u8 {
        NONE = 0,
        BUTTON_1 = SDL_BUTTON_LEFT,
        BUTTON_2 = SDL_BUTTON_MIDDLE,
        BUTTON_3 = SDL_BUTTON_RIGHT,
        BUTTON_4 = SDL_BUTTON_X1,
        BUTTON_5 = SDL_BUTTON_X2,

        BUTTON_LEFT = SDL_BUTTON_LEFT,
        BUTTON_MIDDLE = SDL_BUTTON_MIDDLE,
        BUTTON_RIGHT = SDL_BUTTON_RIGHT,
    };

    /// USB HID's for keyboards. If you are doing non-text input you should be using these unless you have a good
    /// reason. If you use KeyCode instead, you will break alternate keyboard layouts such as DVORAK. All values are
    /// currently mapped directly to SDL2 values because that is what is used in the implementation. If you need to know
    /// the codes or more details there is [the USB hid
    /// spec](https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf), under 0x07.
    enum class KeyHid {
        KEY_UNKNOWN = SDL_SCANCODE_UNKNOWN,
        KEY_A = SDL_SCANCODE_A,
        KEY_B = SDL_SCANCODE_B,
        KEY_C = SDL_SCANCODE_C,
        KEY_D = SDL_SCANCODE_D,
        KEY_E = SDL_SCANCODE_E,
        KEY_F = SDL_SCANCODE_F,
        KEY_G = SDL_SCANCODE_G,
        KEY_H = SDL_SCANCODE_H,
        KEY_I = SDL_SCANCODE_I,
        KEY_J = SDL_SCANCODE_J,
        KEY_K = SDL_SCANCODE_K,
        KEY_L = SDL_SCANCODE_L,
        KEY_M = SDL_SCANCODE_M,
        KEY_N = SDL_SCANCODE_N,
        KEY_O = SDL_SCANCODE_O,
        KEY_P = SDL_SCANCODE_P,
        KEY_Q = SDL_SCANCODE_Q,
        KEY_R = SDL_SCANCODE_R,
        KEY_S = SDL_SCANCODE_S,
        KEY_T = SDL_SCANCODE_T,
        KEY_U = SDL_SCANCODE_U,
        KEY_V = SDL_SCANCODE_V,
        KEY_W = SDL_SCANCODE_W,
        KEY_X = SDL_SCANCODE_X,
        KEY_Y = SDL_SCANCODE_Y,
        KEY_Z = SDL_SCANCODE_Z,
        KEY_1 = SDL_SCANCODE_1,
        KEY_2 = SDL_SCANCODE_2,
        KEY_3 = SDL_SCANCODE_3,
        KEY_4 = SDL_SCANCODE_4,
        KEY_5 = SDL_SCANCODE_5,
        KEY_6 = SDL_SCANCODE_6,
        KEY_7 = SDL_SCANCODE_7,
        KEY_8 = SDL_SCANCODE_8,
        KEY_9 = SDL_SCANCODE_9,
        KEY_0 = SDL_SCANCODE_0,
        KEY_RETURN = SDL_SCANCODE_RETURN,
        KEY_ESCAPE = SDL_SCANCODE_ESCAPE,
        KEY_BACKSPACE = SDL_SCANCODE_BACKSPACE,
        KEY_TAB = SDL_SCANCODE_TAB,
        KEY_SPACE = SDL_SCANCODE_SPACE,
        KEY_MINUS = SDL_SCANCODE_MINUS,
        KEY_EQUALS = SDL_SCANCODE_EQUALS,
        KEY_LEFTBRACKET = SDL_SCANCODE_LEFTBRACKET,
        KEY_RIGHTBRACKET = SDL_SCANCODE_RIGHTBRACKET,
        KEY_BACKSLASH = SDL_SCANCODE_BACKSLASH,
        KEY_NONUSHASH = SDL_SCANCODE_NONUSHASH,
        KEY_SEMICOLON = SDL_SCANCODE_SEMICOLON,
        KEY_APOSTROPHE = SDL_SCANCODE_APOSTROPHE,
        KEY_GRAVE = SDL_SCANCODE_GRAVE,
        KEY_COMMA = SDL_SCANCODE_COMMA,
        KEY_PERIOD = SDL_SCANCODE_PERIOD,
        KEY_SLASH = SDL_SCANCODE_SLASH,
        KEY_CAPSLOCK = SDL_SCANCODE_CAPSLOCK,
        KEY_F1 = SDL_SCANCODE_F1,
        KEY_F2 = SDL_SCANCODE_F2,
        KEY_F3 = SDL_SCANCODE_F3,
        KEY_F4 = SDL_SCANCODE_F4,
        KEY_F5 = SDL_SCANCODE_F5,
        KEY_F6 = SDL_SCANCODE_F6,
        KEY_F7 = SDL_SCANCODE_F7,
        KEY_F8 = SDL_SCANCODE_F8,
        KEY_F9 = SDL_SCANCODE_F9,
        KEY_F10 = SDL_SCANCODE_F10,
        KEY_F11 = SDL_SCANCODE_F11,
        KEY_F12 = SDL_SCANCODE_F12,
        KEY_PRINTSCREEN = SDL_SCANCODE_PRINTSCREEN,
        KEY_SCROLLLOCK = SDL_SCANCODE_SCROLLLOCK,
        KEY_PAUSE = SDL_SCANCODE_PAUSE,
        KEY_INSERT = SDL_SCANCODE_INSERT,
        KEY_HOME = SDL_SCANCODE_HOME,
        KEY_PAGEUP = SDL_SCANCODE_PAGEUP,
        KEY_DELETE = SDL_SCANCODE_DELETE,
        KEY_END = SDL_SCANCODE_END,
        KEY_PAGEDOWN = SDL_SCANCODE_PAGEDOWN,
        KEY_RIGHT = SDL_SCANCODE_RIGHT,
        KEY_LEFT = SDL_SCANCODE_LEFT,
        KEY_DOWN = SDL_SCANCODE_DOWN,
        KEY_UP = SDL_SCANCODE_UP,
        KEY_NUMLOCKCLEAR = SDL_SCANCODE_NUMLOCKCLEAR,
        KEY_KP_DIVIDE = SDL_SCANCODE_KP_DIVIDE,
        KEY_KP_MULTIPLY = SDL_SCANCODE_KP_MULTIPLY,
        KEY_KP_MINUS = SDL_SCANCODE_KP_MINUS,
        KEY_KP_PLUS = SDL_SCANCODE_KP_PLUS,
        KEY_KP_ENTER = SDL_SCANCODE_KP_ENTER,
        KEY_KP_1 = SDL_SCANCODE_KP_1,
        KEY_KP_2 = SDL_SCANCODE_KP_2,
        KEY_KP_3 = SDL_SCANCODE_KP_3,
        KEY_KP_4 = SDL_SCANCODE_KP_4,
        KEY_KP_5 = SDL_SCANCODE_KP_5,
        KEY_KP_6 = SDL_SCANCODE_KP_6,
        KEY_KP_7 = SDL_SCANCODE_KP_7,
        KEY_KP_8 = SDL_SCANCODE_KP_8,
        KEY_KP_9 = SDL_SCANCODE_KP_9,
        KEY_KP_0 = SDL_SCANCODE_KP_0,
        KEY_KP_PERIOD = SDL_SCANCODE_KP_PERIOD,
        KEY_NONUSBACKSLASH = SDL_SCANCODE_NONUSBACKSLASH,
        KEY_APPLICATION = SDL_SCANCODE_APPLICATION,
        KEY_POWER = SDL_SCANCODE_POWER,
        KEY_KP_EQUALS = SDL_SCANCODE_KP_EQUALS,
        KEY_F13 = SDL_SCANCODE_F13,
        KEY_F14 = SDL_SCANCODE_F14,
        KEY_F15 = SDL_SCANCODE_F15,
        KEY_F16 = SDL_SCANCODE_F16,
        KEY_F17 = SDL_SCANCODE_F17,
        KEY_F18 = SDL_SCANCODE_F18,
        KEY_F19 = SDL_SCANCODE_F19,
        KEY_F20 = SDL_SCANCODE_F20,
        KEY_F21 = SDL_SCANCODE_F21,
        KEY_F22 = SDL_SCANCODE_F22,
        KEY_F23 = SDL_SCANCODE_F23,
        KEY_F24 = SDL_SCANCODE_F24,
        KEY_EXECUTE = SDL_SCANCODE_EXECUTE,
        KEY_HELP = SDL_SCANCODE_HELP,
        KEY_MENU = SDL_SCANCODE_MENU,
        KEY_SELECT = SDL_SCANCODE_SELECT,
        KEY_STOP = SDL_SCANCODE_STOP,
        KEY_AGAIN = SDL_SCANCODE_AGAIN,
        KEY_UNDO = SDL_SCANCODE_UNDO,
        KEY_CUT = SDL_SCANCODE_CUT,
        KEY_COPY = SDL_SCANCODE_COPY,
        KEY_PASTE = SDL_SCANCODE_PASTE,
        KEY_FIND = SDL_SCANCODE_FIND,
        KEY_MUTE = SDL_SCANCODE_MUTE,
        KEY_VOLUMEUP = SDL_SCANCODE_VOLUMEUP,
        KEY_VOLUMEDOWN = SDL_SCANCODE_VOLUMEDOWN,
        // if SDL ever eneables these
        // KEY_LOCKINGCAPSLOCK = SDL_SCANCODE_LOCKINGCAPSLOCK,
        // KEY_LOCKINGNUMLOCK = SDL_SCANCODE_LOCKINGNUMLOCK,
        // KEY_LOCKINGSCROLLLOCK = SDL_SCANCODE_LOCKINGSCROLLLOCK,
        KEY_KP_COMMA = SDL_SCANCODE_KP_COMMA,
        KEY_KP_EQUALSAS400 = SDL_SCANCODE_KP_EQUALSAS400,
        KEY_INTERNATIONAL1 = SDL_SCANCODE_INTERNATIONAL1,
        KEY_INTERNATIONAL2 = SDL_SCANCODE_INTERNATIONAL2,
        KEY_INTERNATIONAL3 = SDL_SCANCODE_INTERNATIONAL3,
        KEY_INTERNATIONAL4 = SDL_SCANCODE_INTERNATIONAL4,
        KEY_INTERNATIONAL5 = SDL_SCANCODE_INTERNATIONAL5,
        KEY_INTERNATIONAL6 = SDL_SCANCODE_INTERNATIONAL6,
        KEY_INTERNATIONAL7 = SDL_SCANCODE_INTERNATIONAL7,
        KEY_INTERNATIONAL8 = SDL_SCANCODE_INTERNATIONAL8,
        KEY_INTERNATIONAL9 = SDL_SCANCODE_INTERNATIONAL9,
        KEY_LANG1 = SDL_SCANCODE_LANG1,
        KEY_LANG2 = SDL_SCANCODE_LANG2,
        KEY_LANG3 = SDL_SCANCODE_LANG3,
        KEY_LANG4 = SDL_SCANCODE_LANG4,
        KEY_LANG5 = SDL_SCANCODE_LANG5,
        KEY_LANG6 = SDL_SCANCODE_LANG6,
        KEY_LANG7 = SDL_SCANCODE_LANG7,
        KEY_LANG8 = SDL_SCANCODE_LANG8,
        KEY_LANG9 = SDL_SCANCODE_LANG9,
        KEY_ALTERASE = SDL_SCANCODE_ALTERASE,
        KEY_SYSREQ = SDL_SCANCODE_SYSREQ,
        KEY_CANCEL = SDL_SCANCODE_CANCEL,
        KEY_CLEAR = SDL_SCANCODE_CLEAR,
        KEY_PRIOR = SDL_SCANCODE_PRIOR,
        KEY_RETURN2 = SDL_SCANCODE_RETURN2,
        KEY_SEPARATOR = SDL_SCANCODE_SEPARATOR,
        KEY_OUT = SDL_SCANCODE_OUT,
        KEY_OPER = SDL_SCANCODE_OPER,
        KEY_CLEARAGAIN = SDL_SCANCODE_CLEARAGAIN,
        KEY_CRSEL = SDL_SCANCODE_CRSEL,
        KEY_EXSEL = SDL_SCANCODE_EXSEL,
        KEY_KP_00 = SDL_SCANCODE_KP_00,
        KEY_KP_000 = SDL_SCANCODE_KP_000,
        KEY_THOUSANDSSEPARATOR = SDL_SCANCODE_THOUSANDSSEPARATOR,
        KEY_DECIMALSEPARATOR = SDL_SCANCODE_DECIMALSEPARATOR,
        KEY_CURRENCYUNIT = SDL_SCANCODE_CURRENCYUNIT,
        KEY_CURRENCYSUBUNIT = SDL_SCANCODE_CURRENCYSUBUNIT,
        KEY_KP_LEFTPAREN = SDL_SCANCODE_KP_LEFTPAREN,
        KEY_KP_RIGHTPAREN = SDL_SCANCODE_KP_RIGHTPAREN,
        KEY_KP_LEFTBRACE = SDL_SCANCODE_KP_LEFTBRACE,
        KEY_KP_RIGHTBRACE = SDL_SCANCODE_KP_RIGHTBRACE,
        KEY_KP_TAB = SDL_SCANCODE_KP_TAB,
        KEY_KP_BACKSPACE = SDL_SCANCODE_KP_BACKSPACE,
        KEY_KP_A = SDL_SCANCODE_KP_A,
        KEY_KP_B = SDL_SCANCODE_KP_B,
        KEY_KP_C = SDL_SCANCODE_KP_C,
        KEY_KP_D = SDL_SCANCODE_KP_D,
        KEY_KP_E = SDL_SCANCODE_KP_E,
        KEY_KP_F = SDL_SCANCODE_KP_F,
        KEY_KP_XOR = SDL_SCANCODE_KP_XOR,
        KEY_KP_POWER = SDL_SCANCODE_KP_POWER,
        KEY_KP_PERCENT = SDL_SCANCODE_KP_PERCENT,
        KEY_KP_LESS = SDL_SCANCODE_KP_LESS,
        KEY_KP_GREATER = SDL_SCANCODE_KP_GREATER,
        KEY_KP_AMPERSAND = SDL_SCANCODE_KP_AMPERSAND,
        KEY_KP_DBLAMPERSAND = SDL_SCANCODE_KP_DBLAMPERSAND,
        KEY_KP_VERTICALBAR = SDL_SCANCODE_KP_VERTICALBAR,
        KEY_KP_DBLVERTICALBAR = SDL_SCANCODE_KP_DBLVERTICALBAR,
        KEY_KP_COLON = SDL_SCANCODE_KP_COLON,
        KEY_KP_HASH = SDL_SCANCODE_KP_HASH,
        KEY_KP_SPACE = SDL_SCANCODE_KP_SPACE,
        KEY_KP_AT = SDL_SCANCODE_KP_AT,
        KEY_KP_EXCLAM = SDL_SCANCODE_KP_EXCLAM,
        KEY_KP_MEMSTORE = SDL_SCANCODE_KP_MEMSTORE,
        KEY_KP_MEMRECALL = SDL_SCANCODE_KP_MEMRECALL,
        KEY_KP_MEMCLEAR = SDL_SCANCODE_KP_MEMCLEAR,
        KEY_KP_MEMADD = SDL_SCANCODE_KP_MEMADD,
        KEY_KP_MEMSUBTRACT = SDL_SCANCODE_KP_MEMSUBTRACT,
        KEY_KP_MEMMULTIPLY = SDL_SCANCODE_KP_MEMMULTIPLY,
        KEY_KP_MEMDIVIDE = SDL_SCANCODE_KP_MEMDIVIDE,
        KEY_KP_PLUSMINUS = SDL_SCANCODE_KP_PLUSMINUS,
        KEY_KP_CLEAR = SDL_SCANCODE_KP_CLEAR,
        KEY_KP_CLEARENTRY = SDL_SCANCODE_KP_CLEARENTRY,
        KEY_KP_BINARY = SDL_SCANCODE_KP_BINARY,
        KEY_KP_OCTAL = SDL_SCANCODE_KP_OCTAL,
        KEY_KP_DECIMAL = SDL_SCANCODE_KP_DECIMAL,
        KEY_KP_HEXADECIMAL = SDL_SCANCODE_KP_HEXADECIMAL,
        KEY_LCTRL = SDL_SCANCODE_LCTRL,
        KEY_LSHIFT = SDL_SCANCODE_LSHIFT,
        KEY_LALT = SDL_SCANCODE_LALT,
        KEY_LGUI = SDL_SCANCODE_LGUI,
        KEY_RCTRL = SDL_SCANCODE_RCTRL,
        KEY_RSHIFT = SDL_SCANCODE_RSHIFT,
        KEY_RALT = SDL_SCANCODE_RALT,
        KEY_RGUI = SDL_SCANCODE_RGUI,
        KEY_MODE = SDL_SCANCODE_MODE,
        KEY_AUDIONEXT = SDL_SCANCODE_AUDIONEXT,
        KEY_AUDIOPREV = SDL_SCANCODE_AUDIOPREV,
        KEY_AUDIOSTOP = SDL_SCANCODE_AUDIOSTOP,
        KEY_AUDIOPLAY = SDL_SCANCODE_AUDIOPLAY,
        KEY_AUDIOMUTE = SDL_SCANCODE_AUDIOMUTE,
        KEY_MEDIASELECT = SDL_SCANCODE_MEDIASELECT,
        KEY_WWW = SDL_SCANCODE_WWW,
        KEY_MAIL = SDL_SCANCODE_MAIL,
        KEY_CALCULATOR = SDL_SCANCODE_CALCULATOR,
        KEY_COMPUTER = SDL_SCANCODE_COMPUTER,
        KEY_AC_SEARCH = SDL_SCANCODE_AC_SEARCH,
        KEY_AC_HOME = SDL_SCANCODE_AC_HOME,
        KEY_AC_BACK = SDL_SCANCODE_AC_BACK,
        KEY_AC_FORWARD = SDL_SCANCODE_AC_FORWARD,
        KEY_AC_STOP = SDL_SCANCODE_AC_STOP,
        KEY_AC_REFRESH = SDL_SCANCODE_AC_REFRESH,
        KEY_AC_BOOKMARKS = SDL_SCANCODE_AC_BOOKMARKS,
        KEY_BRIGHTNESSDOWN = SDL_SCANCODE_BRIGHTNESSDOWN,
        KEY_BRIGHTNESSUP = SDL_SCANCODE_BRIGHTNESSUP,
        KEY_DISPLAYSWITCH = SDL_SCANCODE_DISPLAYSWITCH,
        KEY_KBDILLUMTOGGLE = SDL_SCANCODE_KBDILLUMTOGGLE,
        KEY_KBDILLUMDOWN = SDL_SCANCODE_KBDILLUMDOWN,
        KEY_KBDILLUMUP = SDL_SCANCODE_KBDILLUMUP,
        KEY_EJECT = SDL_SCANCODE_EJECT,
        KEY_SLEEP = SDL_SCANCODE_SLEEP,
        KEY_APP1 = SDL_SCANCODE_APP1,
        KEY_APP2 = SDL_SCANCODE_APP2,
        KEY_AUDIOREWIND = SDL_SCANCODE_AUDIOREWIND,
        KEY_AUDIOFASTFORWARD = SDL_SCANCODE_AUDIOFASTFORWARD,
    };

    /// Virtual key press for keyboard events, if you are doing text input you should be doing this, in almost all other
    /// cases use KeyHID. These values will be affected by keyboard mapping and layouts so the key you see on the button
    /// may not be the key that is transmitted. Currently uses SDL values because that's what is used under the hood.
    enum class Keycode {
        UNKNOWN = SDLK_UNKNOWN,
        RETURN = SDLK_RETURN,
        ESCAPE = SDLK_ESCAPE,
        BACKSPACE = SDLK_BACKSPACE,
        TAB = SDLK_TAB,
        SPACE = SDLK_SPACE,
        EXCLAIM = SDLK_EXCLAIM,
        DOUBLE_QUOTE = SDLK_QUOTEDBL,
        HASH = SDLK_HASH,
        PERCENT = SDLK_PERCENT,
        DOLLAR = SDLK_DOLLAR,
        AMPERSAND = SDLK_AMPERSAND,
        QUOTE = SDLK_QUOTE,
        LEFTPAREN = SDLK_LEFTPAREN,
        RIGHTPAREN = SDLK_RIGHTPAREN,
        ASTERISK = SDLK_ASTERISK,
        PLUS = SDLK_PLUS,
        COMMA = SDLK_COMMA,
        MINUS = SDLK_MINUS,
        PERIOD = SDLK_PERIOD,
        SLASH = SDLK_SLASH,
        NUM0 = SDLK_0,
        NUM1 = SDLK_1,
        NUM2 = SDLK_2,
        NUM3 = SDLK_3,
        NUM4 = SDLK_4,
        NUM5 = SDLK_5,
        NUM6 = SDLK_6,
        NUM7 = SDLK_7,
        NUM8 = SDLK_8,
        NUM9 = SDLK_9,
        COLON = SDLK_COLON,
        SEMICOLON = SDLK_SEMICOLON,
        LESS = SDLK_LESS,
        EQUALS = SDLK_EQUALS,
        GREATER = SDLK_GREATER,
        QUESTION = SDLK_QUESTION,
        AT = SDLK_AT,
        LEFTBRACKET = SDLK_LEFTBRACKET,
        BACKSLASH = SDLK_BACKSLASH,
        RIGHTBRACKET = SDLK_RIGHTBRACKET,
        CARET = SDLK_CARET,
        UNDERSCORE = SDLK_UNDERSCORE,
        BACKQUOTE = SDLK_BACKQUOTE,
        A = SDLK_a,
        B = SDLK_b,
        C = SDLK_c,
        D = SDLK_d,
        E = SDLK_e,
        F = SDLK_f,
        G = SDLK_g,
        H = SDLK_h,
        I = SDLK_i,
        J = SDLK_j,
        K = SDLK_k,
        L = SDLK_l,
        M = SDLK_m,
        N = SDLK_n,
        O = SDLK_o,
        P = SDLK_p,
        Q = SDLK_q,
        R = SDLK_r,
        S = SDLK_s,
        T = SDLK_t,
        U = SDLK_u,
        V = SDLK_v,
        W = SDLK_w,
        X = SDLK_x,
        Y = SDLK_y,
        Z = SDLK_z,
        CAPSLOCK = SDLK_CAPSLOCK,
        F1 = SDLK_F1,
        F2 = SDLK_F2,
        F3 = SDLK_F3,
        F4 = SDLK_F4,
        F5 = SDLK_F5,
        F6 = SDLK_F6,
        F7 = SDLK_F7,
        F8 = SDLK_F8,
        F9 = SDLK_F9,
        F10 = SDLK_F10,
        F11 = SDLK_F11,
        F12 = SDLK_F12,
        PRINTSCREEN = SDLK_PRINTSCREEN,
        SCROLLLOCK = SDLK_SCROLLLOCK,
        PAUSE = SDLK_PAUSE,
        INSERT = SDLK_INSERT,
        HOME = SDLK_HOME,
        PAGEUP = SDLK_PAGEUP,
        DELETE = SDLK_DELETE,
        END = SDLK_END,
        PAGEDOWN = SDLK_PAGEDOWN,
        RIGHT = SDLK_RIGHT,
        LEFT = SDLK_LEFT,
        DOWN = SDLK_DOWN,
        UP = SDLK_UP,
        NUMLOCKCLEAR = SDLK_NUMLOCKCLEAR,
        KP_DIVIDE = SDLK_KP_DIVIDE,
        KP_MULTIPLY = SDLK_KP_MULTIPLY,
        KP_MINUS = SDLK_KP_MINUS,
        KP_PLUS = SDLK_KP_PLUS,
        KP_ENTER = SDLK_KP_ENTER,
        KP_1 = SDLK_KP_1,
        KP_2 = SDLK_KP_2,
        KP_3 = SDLK_KP_3,
        KP_4 = SDLK_KP_4,
        KP_5 = SDLK_KP_5,
        KP_6 = SDLK_KP_6,
        KP_7 = SDLK_KP_7,
        KP_8 = SDLK_KP_8,
        KP_9 = SDLK_KP_9,
        KP_0 = SDLK_KP_0,
        KP_PERIOD = SDLK_KP_PERIOD,
        APPLICATION = SDLK_APPLICATION,
        POWER = SDLK_POWER,
        KP_EQUALS = SDLK_KP_EQUALS,
        F13 = SDLK_F13,
        F14 = SDLK_F14,
        F15 = SDLK_F15,
        F16 = SDLK_F16,
        F17 = SDLK_F17,
        F18 = SDLK_F18,
        F19 = SDLK_F19,
        F20 = SDLK_F20,
        F21 = SDLK_F21,
        F22 = SDLK_F22,
        F23 = SDLK_F23,
        F24 = SDLK_F24,
        EXECUTE = SDLK_EXECUTE,
        HELP = SDLK_HELP,
        MENU = SDLK_MENU,
        SELECT = SDLK_SELECT,
        STOP = SDLK_STOP,
        AGAIN = SDLK_AGAIN,
        UNDO = SDLK_UNDO,
        CUT = SDLK_CUT,
        COPY = SDLK_COPY,
        PASTE = SDLK_PASTE,
        FIND = SDLK_FIND,
        MUTE = SDLK_MUTE,
        VOLUMEUP = SDLK_VOLUMEUP,
        VOLUMEDOWN = SDLK_VOLUMEDOWN,
        KP_COMMA = SDLK_KP_COMMA,
        KP_EQUALSAS400 = SDLK_KP_EQUALSAS400,
        ALTERASE = SDLK_ALTERASE,
        SYSREQ = SDLK_SYSREQ,
        CANCEL = SDLK_CANCEL,
        CLEAR = SDLK_CLEAR,
        PRIOR = SDLK_PRIOR,
        RETURN2 = SDLK_RETURN2,
        SEPARATOR = SDLK_SEPARATOR,
        OUT = SDLK_OUT,
        OPER = SDLK_OPER,
        CLEARAGAIN = SDLK_CLEARAGAIN,
        CRSEL = SDLK_CRSEL,
        EXSEL = SDLK_EXSEL,
        KP_00 = SDLK_KP_00,
        KP_000 = SDLK_KP_000,
        THOUSANDSSEPARATOR = SDLK_THOUSANDSSEPARATOR,
        DECIMALSEPARATOR = SDLK_DECIMALSEPARATOR,
        CURRENCYUNIT = SDLK_CURRENCYUNIT,
        CURRENCYSUBUNIT = SDLK_CURRENCYSUBUNIT,
        KP_LEFTPAREN = SDLK_KP_LEFTPAREN,
        KP_RIGHTPAREN = SDLK_KP_RIGHTPAREN,
        KP_LEFTBRACE = SDLK_KP_LEFTBRACE,
        KP_RIGHTBRACE = SDLK_KP_RIGHTBRACE,
        KP_TAB = SDLK_KP_TAB,
        KP_BACKSPACE = SDLK_KP_BACKSPACE,
        KP_A = SDLK_KP_A,
        KP_B = SDLK_KP_B,
        KP_C = SDLK_KP_C,
        KP_D = SDLK_KP_D,
        KP_E = SDLK_KP_E,
        KP_F = SDLK_KP_F,
        KP_XOR = SDLK_KP_XOR,
        KP_POWER = SDLK_KP_POWER,
        KP_PERCENT = SDLK_KP_PERCENT,
        KP_LESS = SDLK_KP_LESS,
        KP_GREATER = SDLK_KP_GREATER,
        KP_AMPERSAND = SDLK_KP_AMPERSAND,
        KP_DBLAMPERSAND = SDLK_KP_DBLAMPERSAND,
        KP_VERTICALBAR = SDLK_KP_VERTICALBAR,
        KP_DBLVERTICALBAR = SDLK_KP_DBLVERTICALBAR,
        KP_COLON = SDLK_KP_COLON,
        KP_HASH = SDLK_KP_HASH,
        KP_SPACE = SDLK_KP_SPACE,
        KP_AT = SDLK_KP_AT,
        KP_EXCLAM = SDLK_KP_EXCLAM,
        KP_MEMSTORE = SDLK_KP_MEMSTORE,
        KP_MEMRECALL = SDLK_KP_MEMRECALL,
        KP_MEMCLEAR = SDLK_KP_MEMCLEAR,
        KP_MEMADD = SDLK_KP_MEMADD,
        KP_MEMSUBTRACT = SDLK_KP_MEMSUBTRACT,
        KP_MEMMULTIPLY = SDLK_KP_MEMMULTIPLY,
        KP_MEMDIVIDE = SDLK_KP_MEMDIVIDE,
        KP_PLUSMINUS = SDLK_KP_PLUSMINUS,
        KP_CLEAR = SDLK_KP_CLEAR,
        KP_CLEARENTRY = SDLK_KP_CLEARENTRY,
        KP_BINARY = SDLK_KP_BINARY,
        KP_OCTAL = SDLK_KP_OCTAL,
        KP_DECIMAL = SDLK_KP_DECIMAL,
        KP_HEXADECIMAL = SDLK_KP_HEXADECIMAL,
        LCTRL = SDLK_LCTRL,
        LSHIFT = SDLK_LSHIFT,
        LALT = SDLK_LALT,
        LGUI = SDLK_LGUI,
        RCTRL = SDLK_RCTRL,
        RSHIFT = SDLK_RSHIFT,
        RALT = SDLK_RALT,
        RGUI = SDLK_RGUI,
        MODE = SDLK_MODE,
        AUDIONEXT = SDLK_AUDIONEXT,
        AUDIOPREV = SDLK_AUDIOPREV,
        AUDIOSTOP = SDLK_AUDIOSTOP,
        AUDIOPLAY = SDLK_AUDIOPLAY,
        AUDIOMUTE = SDLK_AUDIOMUTE,
        MEDIASELECT = SDLK_MEDIASELECT,
        WWW = SDLK_WWW,
        MAIL = SDLK_MAIL,
        CALCULATOR = SDLK_CALCULATOR,
        COMPUTER = SDLK_COMPUTER,
        AC_SEARCH = SDLK_AC_SEARCH,
        AC_HOME = SDLK_AC_HOME,
        AC_BACK = SDLK_AC_BACK,
        AC_FORWARD = SDLK_AC_FORWARD,
        AC_STOP = SDLK_AC_STOP,
        AC_REFRESH = SDLK_AC_REFRESH,
        AC_BOOKMARKS = SDLK_AC_BOOKMARKS,
        BRIGHTNESSDOWN = SDLK_BRIGHTNESSDOWN,
        BRIGHTNESSUP = SDLK_BRIGHTNESSUP,
        DISPLAYSWITCH = SDLK_DISPLAYSWITCH,
        KBDILLUMTOGGLE = SDLK_KBDILLUMTOGGLE,
        KBDILLUMDOWN = SDLK_KBDILLUMDOWN,
        KBDILLUMUP = SDLK_KBDILLUMUP,
        EJECT = SDLK_EJECT,
        SLEEP = SDLK_SLEEP,
        APP1 = SDLK_APP1,
        APP2 = SDLK_APP2,
        AUDIOREWIND = SDLK_AUDIOREWIND,
        AUDIOFASTFORWARD = SDLK_AUDIOFASTFORWARD,
    };

    /// Returns true if the passed key is currently pressed.
    /// This will only return true if the window is focused.
    bool keyDown(const KeyHid& hid);

    /// Returns true if the passed mouse button is currently pressed.
    /// This will only return true if a window is focused, and the mouse is pressing within the focused window.
    bool mouseButtonDown(const MouseButton& button);

    /// Returns the position of the mouse relative to the top left corner of the focused window.
    /// @warning If you are working with multiple windows, you need to ensure the window you're working with is the
    /// focused window.
    maths::ivec2 getMousePostition();

    /// @}
    /// @}

    std::ostream& operator<<(std::ostream& os, const MouseButton& button);
    std::ostream& operator<<(std::ostream& os, const KeyHid& hid);
    std::ostream& operator<<(std::ostream& os, const Keycode& code);

} // namespace ce
